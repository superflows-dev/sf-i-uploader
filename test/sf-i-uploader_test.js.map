{"version":3,"file":"sf-i-uploader_test.js","sourceRoot":"","sources":["../src/test/sf-i-uploader_test.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2022 Superflows.dev\n * SPDX-License-Identifier: MIT\n */\n\nimport {SfIUploader} from '../sf-i-uploader.js';\n// import { stub } from 'sinon';\nimport {fixture} from '@open-wc/testing';\nimport {assert} from '@open-wc/testing';\nimport { html } from 'lit/static-html.js';\n\nconst htmlContent = html `\n\n  <sf-i-uploader max=\"10\" apiId=\"1peg5170d3\" allowedExtensions=\"[&quot;jpg&quot;,&quot;png&quot;,&quot;pdf&quot;]\" extract=\"yes\" dataPassthrough=\"test123\" callbackUrlHost=\"webhook.site\" callbackUrlPath=\"d2f50e9d-8d27-47db-b457-b6691c3477e5\"></sf-i-uploader></sf-i-uploader>\n\n      `;\nvar clickEvent = new MouseEvent(\"click\", {\n  \"view\": window,\n  \"bubbles\": true,\n  \"cancelable\": false\n});\n\nconst changeEvent = new Event('change');\n\n// const TIMEOUT_500 = 500;\nconst TIMEOUT_2000 = 2000;\n\n\n//const TIMEOUT = 2000;\nsuite('sf-i-uploader > basics', () => {\n\n  test('is defined', () => {\n    const el = document.createElement('sf-i-uploader');\n    assert.instanceOf(el, SfIUploader);\n  });\n\n  test('new button render', async () => {\n\n    // basic button load\n\n    const el = (await fixture(htmlContent)) as SfIUploader;\n    await el.updateComplete;\n\n    await new Promise((r) => setTimeout(r, TIMEOUT_2000));\n\n    const button = el.shadowRoot!.querySelector('#button-add')!;\n    assert.ok(button.innerHTML.indexOf('New') >= 0); \n\n    // click on the new button, input should load\n\n    button.dispatchEvent(clickEvent);\n\n    await new Promise((r) => setTimeout(r, TIMEOUT_2000));\n\n    const file0 = el.shadowRoot!.querySelector('#file-0')! as HTMLInputElement;\n    assert.exists(file0);\n\n    // click on the new button, next input should load\n\n    button.dispatchEvent(clickEvent);\n\n    await new Promise((r) => setTimeout(r, TIMEOUT_2000));\n\n    const file1 = el.shadowRoot!.querySelector('#file-1')!;\n    assert.exists(file1);\n\n    // delete the second input\n\n    let delete1 = el.shadowRoot!.querySelector('#button-delete-1')!;\n    delete1.dispatchEvent(clickEvent);\n\n    await new Promise((r) => setTimeout(r, TIMEOUT_2000));\n\n    delete1 = el.shadowRoot!.querySelector('#button-delete-1')!;\n    assert.notExists(delete1);\n\n    // file selection\n\n    let file = new File(['this is file content!'], 'dummy.txt');\n    let dt = new DataTransfer();\n    dt.items.add(file);\n    file0.files  = dt.files;\n    file0.dispatchEvent(changeEvent);\n\n    await new Promise((r) => setTimeout(r, TIMEOUT_2000));\n\n    let upload0 = el.shadowRoot!.querySelector('#button-upload-0');\n    assert.exists(upload0);\n\n    const cancel0 = el.shadowRoot!.querySelector('#button-cancel-0');\n    assert.exists(cancel0);\n\n    // clear file selection\n\n    cancel0?.dispatchEvent(clickEvent);\n\n    await new Promise((r) => setTimeout(r, TIMEOUT_2000));\n\n    let delete0 = el.shadowRoot!.querySelector('#button-delete-0')!;\n    assert.exists(delete0);\n\n    // file selection again\n\n    file = new File(['this is file content!'], 'dummy.txt');\n    dt = new DataTransfer();\n    dt.items.add(file);\n    file0.files  = dt.files;\n    file0.dispatchEvent(changeEvent);\n\n    await new Promise((r) => setTimeout(r, TIMEOUT_2000));\n\n    upload0 = el.shadowRoot!.querySelector('#button-upload-0');\n    assert.exists(upload0);\n    assert.equal(JSON.stringify(el.selectedValues()), \"[]\");\n\n});\n\n\n});\n\n"]}