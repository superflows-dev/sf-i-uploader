{"version":3,"file":"api.js","sourceRoot":"","sources":["src/api.ts"],"names":[],"mappings":"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","sourcesContent":["import Util from './util';\n\nconst prepareXhr = async (data: any, url: string, loaderElement: any, authorization: any) => {\n\n    if(loaderElement != null) {\n        loaderElement.innerHTML = '<div class=\"lds-dual-ring\"></div>';\n    }\n    return await Util.callApi(url, data, authorization);\n\n}\n\n\nconst uploadBlock = async (key: string, block: string, data: string, apiId: string, _SfLoader: any, callbackError: any) => {\n\n    let url = \"https://\"+apiId+\".execute-api.us-east-1.amazonaws.com/test/upload\";\n\n    const body = { \"type\": \"data\", \"key\": key, \"data\": data, \"block\": block} \n    const authorization = btoa(Util.readCookie('email') + \":\" + Util.readCookie('accessToken'));\n    const xhr : any = (await prepareXhr(body, url, _SfLoader, authorization)) as any;\n    _SfLoader.innerHTML = '';\n    if(xhr.status == 200) {\n      \n    } else {\n      const jsonRespose = JSON.parse(xhr.responseText);\n      callbackError(jsonRespose.error);\n    }\n\n  }\n\n\nconst uploadMeta = async (key: string, ext: string, numblocks: string, apiId: string, _SfLoader: any, callbackError: any) => {\n\n    let url = \"https://\"+apiId+\".execute-api.us-east-1.amazonaws.com/test/upload\";\n\n    const body = { \"type\": \"meta\", \"key\": key, \"ext\": ext, \"numblocks\": numblocks} \n    const authorization = btoa(Util.readCookie('email') + \":\" + Util.readCookie('accessToken'));\n    const xhr : any = (await prepareXhr(body, url, _SfLoader, authorization)) as any;\n    _SfLoader.innerHTML = '';\n    if(xhr.status == 200) {\n      \n    } else {\n      const jsonRespose = JSON.parse(xhr.responseText);\n      callbackError(jsonRespose.error);\n    }\n\n}\n\nconst getExtractStatus = async (jobid: string, apiId: string, _SfLoader: any, callbackError: any) => {\n\n    let url = \"https://\"+apiId+\".execute-api.us-east-1.amazonaws.com/test/getextractstatus\";\n\n    const body = { \"jobid\": jobid} \n    const authorization = btoa(Util.readCookie('email') + \":\" + Util.readCookie('accessToken'));\n    const xhr : any = (await prepareXhr(body, url, _SfLoader, authorization)) as any;\n    _SfLoader.innerHTML = '';\n    if(xhr.status == 200) {\n\n      const jsonRespose = JSON.parse(xhr.responseText);\n      return jsonRespose;\n      \n    } else {\n      const jsonRespose = JSON.parse(xhr.responseText);\n      callbackError(jsonRespose.error)\n    }\n\n}\n\nconst getExtract = async (key: string, fileIndex: string, dataPassthrough: any, apiId: string, _SfLoader: any, callbackError: any, callbackUrlHost: string, callbackUrlPath: string) => {\n\n    let url = \"https://\"+apiId+\".execute-api.us-east-1.amazonaws.com/test/getextract\";\n\n    var data: any = {};\n\n    data.fileIndex = fileIndex;\n    data.key = key;\n    data.data = dataPassthrough;\n\n    const body = { \"key\": key, \"datapassthrough\": JSON.stringify(data), \"callbackurlhost\": callbackUrlHost, \"callbackurlpath\": callbackUrlPath};\n    const authorization = btoa(Util.readCookie('email') + \":\" + Util.readCookie('accessToken'));\n    const xhr : any = (await prepareXhr(body, url, _SfLoader, authorization)) as any;\n    _SfLoader.innerHTML = '';\n    if(xhr.status == 200) {\n\n      const jsonRespose = JSON.parse(xhr.responseText);\n      return jsonRespose;\n\n    } else {\n      const jsonRespose = JSON.parse(xhr.responseText);\n      callbackError(jsonRespose.error);\n    }\n\n  }\n\n\nconst getKeyData = async (key: string, apiId: string, _SfLoader: any, callbackSuccess: any, callbackError: any) => {\n\n    let url = \"https://\"+apiId+\".execute-api.us-east-1.amazonaws.com/test/get\";\n\n    const body = { \"key\": key} \n    const authorization = btoa(Util.readCookie('email') + \":\" + Util.readCookie('accessToken'));\n    const xhr : any = (await prepareXhr(body, url, _SfLoader, authorization)) as any;\n    _SfLoader.innerHTML = '';\n    if(xhr.status == 200) {\n\n      const jsonRespose = JSON.parse(xhr.responseText);\n      callbackSuccess(jsonRespose.ext, jsonRespose.data);\n      \n    } else {\n      const jsonRespose = JSON.parse(xhr.responseText);\n      callbackError(jsonRespose.error);\n    }\n\n}\n\nconst exportFunctions = {\n    uploadBlock, uploadMeta, getExtractStatus, getExtract, getKeyData, prepareXhr\n };\n \n export default exportFunctions;"]}